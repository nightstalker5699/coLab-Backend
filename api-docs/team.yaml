openapi: 3.0.3
info:
  title: Team Management API
  description: API for team management operations
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://api.example.com
    description: Production server

tags:
  - name: Teams
    description: Team management operations

paths:
  /api/teams:
    get:
      tags:
        - Teams
      summary: Get my teams
      description: Retrieve all teams where the authenticated user is a member or leader
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Teams retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Team"
                        - type: object
                          properties:
                            userRole:
                              type: string
                              enum: [LEADER, MEMBER]
                              example: "MEMBER"
                              description: Current user's role in this team
                            memberCount:
                              type: integer
                              example: 5
                              description: Total number of members in the team
              examples:
                success_response:
                  summary: Successful teams retrieval
                  value:
                    status: success
                    data:
                      - id: "team123"
                        teamName: "Development Team"
                        teamLogo: "https://example.com/logo.png"
                        theme: "blue"
                        joinCode: "ABC123XYZ"
                        userRole: "LEADER"
                        memberCount: 3
                        createdAt: "2024-01-15T10:30:00Z"
                        updatedAt: "2024-01-15T10:30:00Z"
                      - id: "team456"
                        teamName: "Marketing Team"
                        teamLogo: "https://example.com/marketing-logo.png"
                        theme: "green"
                        joinCode: "DEF456ABC"
                        userRole: "MEMBER"
                        memberCount: 7
                        createdAt: "2024-01-10T14:20:00Z"
                        updatedAt: "2024-01-12T09:15:00Z"
                empty_response:
                  summary: No teams found
                  value:
                    status: success
                    data: []
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorized:
                  summary: Authentication required
                  value:
                    status: error
                    message: "Authentication required"
                    errorType: "AuthenticationError"
                    statusCode: 401
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - Teams
      summary: Create a new team
      description: Create a new team with optional members. The authenticated user becomes the team leader.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamRequest"
            examples:
              basic_team:
                summary: Basic team creation
                value:
                  teamData:
                    teamName: "Development Team"
                    teamLogo: "https://example.com/logo.png"
                    theme: "blue"
                  members: []
              team_with_members:
                summary: Team with initial members
                value:
                  teamData:
                    teamName: "Marketing Team"
                    teamLogo: "https://example.com/marketing-logo.png"
                    theme: "green"
                  members:
                    [
                      "2048691a-3c81-4f6f-b806-28c356daae93",
                      "bed92681-fd28-4801-8335-7fdaf45ce386",
                      "e2bea940-71f0-4ff5-9409-309c61ebcc12",
                    ]
      responses:
        "200":
          description: Team created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: "#/components/schemas/Team"
              examples:
                success_response:
                  summary: Successful team creation
                  value:
                    status: success
                    data:
                      id: "team123"
                      teamName: "Development Team"
                      teamLogo: "https://example.com/logo.png"
                      theme: "blue"
                      joinCode: "ABC123XYZ"
                      createdAt: "2024-01-15T10:30:00Z"
                      updatedAt: "2024-01-15T10:30:00Z"
        "400":
          description: Validation error - Team name is required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missing_team_name:
                  summary: Missing team name
                  value:
                    status: error
                    message: "you must insert a team"
                    errorType: "ValidationError"
                    statusCode: 400
                database_error:
                  summary: Database error
                  value:
                    status: error
                    message: "an error creating your team"
                    errorType: "DatabaseError"
                    statusCode: 400
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorized:
                  summary: Authentication required
                  value:
                    status: error
                    message: "Authentication required"
                    errorType: "AuthenticationError"
                    statusCode: 401
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/teams/joinTeam:
    post:
      summary: Join a team using a join code
      description: Allows an authenticated user to join an existing team by providing a valid join code
      tags:
        - Teams
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JoinTeamRequest"
            examples:
              valid_request:
                summary: Valid join team request
                value:
                  joinCode: "ABC123XYZ0"
      responses:
        "200":
          description: Successfully joined the team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JoinTeamResponse"
              examples:
                success_response:
                  summary: Successful team join
                  value:
                    status: "sucess"
                    data:
                      team:
                        id: "team-uuid-123"
                        teamName: "Development Team"
                        joinCode: "ABC123XYZ0"
                        createdAt: "2024-01-15T10:30:00Z"
                        updatedAt: "2024-01-15T10:30:00Z"
                        userInTeams:
                          - user:
                              id: "user-uuid-456"
                              name: "John Doe"
                              email: "john@example.com"
                          - user:
                              id: "user-uuid-789"
                              name: "Jane Smith"
                              email: "jane@example.com"
        "400":
          description: Bad request - Missing or invalid join code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                missing_code:
                  summary: Missing join code
                  value:
                    status: "error"
                    message: "you must input a code to join a team"
                    errorType: "ValidationError"
        "404":
          description: Team not found - Invalid join code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                invalid_code:
                  summary: Invalid join code
                  value:
                    status: "error"
                    message: "This code doesn't belong to a team"
                    errorType: "ValidationError"
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/teams/{teamId}/changeRole:
    patch:
      summary: Change user role in team
      description: Change the role of a specific user within a team using the user-team relationship ID. Only team owners can perform this action. Cannot change role to OWNER.
      tags:
        - Teams
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          description: Unique identifier of the team
          schema:
            type: string
            example: "relation-uuid-123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeRoleRequest"
            examples:
              change_to_member:
                summary: Change user role to MEMBER
                value:
                  role: "MEMBER"
                  relationId: "8a8f6a42-79ce-4c10-b11b-085a11ab6599"
              change_to_leader:
                summary: Change user role to LEADER
                value:
                  role: "LEADER"
                  relationId: "8a8f6a42-79ce-4c10-b11b-085a11ab6599"
      responses:
        "200":
          description: User role changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      userRole:
                        $ref: "#/components/schemas/UserInTeam"
              examples:
                success_response:
                  summary: Successful role change
                  value:
                    status: success
                    data:
                      userRole:
                        id: "relation-uuid-123"
                        userId: "user-uuid-456"
                        teamId: "team-uuid-123"
                        role: "LEADER"
                        createdAt: "2024-01-15T10:30:00Z"
                        updatedAt: "2024-01-15T12:45:00Z"
        "400":
          description: Bad request - Invalid role or attempting to change to OWNER
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                invalid_role:
                  summary: Invalid role specified
                  value:
                    status: error
                    message: "you can only change to certain roles"
                    errorType: "ValidationError"
                    statusCode: 400
                owner_role_attempt:
                  summary: Attempting to change role to OWNER
                  value:
                    status: error
                    message: "you can' change role to owner"
                    errorType: "ValidationError"
                    statusCode: 400
        "401":
          description: Unauthorized - Only team owners can change roles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                not_owner:
                  summary: User is not team owner
                  value:
                    status: error
                    message: "only OWNER can change role of the team"
                    errorType: "AuthorizationError"
                    statusCode: 401
                unauthorized:
                  summary: Authentication required
                  value:
                    status: error
                    message: "Authentication required"
                    errorType: "AuthenticationError"
                    statusCode: 401
        "404":
          description: User-team relationship not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                not_found:
                  summary: Relationship not found
                  value:
                    status: error
                    message: "no team or user with that id"
                    errorType: "NotFoundError"
                    statusCode: 404
                user_not_in_team:
                  summary: User not in team
                  value:
                    status: error
                    message: "this user doesn't belong to this team"
                    errorType: "NotFoundError"
                    statusCode: 404
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/teams/{teamId}:
    get:
      tags:
        - Teams
      summary: Get team details
      description: Retrieve detailed information about a specific team including all members. Only team members can access this endpoint.
      security:
        - bearerAuth: []
      parameters:
        - name: teamId
          in: path
          required: true
          description: Unique identifier of the team
          schema:
            type: string
            example: "team-uuid-123"
      responses:
        "200":
          description: Team details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      team:
                        $ref: "#/components/schemas/TeamDetails"
              examples:
                success_response:
                  summary: Successful team details retrieval
                  value:
                    message: success
                    data:
                      team:
                        teamName: "Development Team"
                        teamLogo: "https://example.com/logo.png"
                        theme: "blue"
                        teamMembers:
                          - id: "user-uuid-123"
                            username: "john_doe"
                            email: "john@example.com"
                            photo: "https://example.com/photos/john.jpg"
                            teamRole: "OWNER"
                            joinAt: "2024-01-15T10:30:00Z"
                            relationId: "relation-uuid-456"
                            isMe: true
                          - id: "user-uuid-789"
                            username: "jane_smith"
                            email: "jane@example.com"
                            photo: "https://example.com/photos/jane.jpg"
                            teamRole: "MEMBER"
                            joinAt: "2024-01-16T14:20:00Z"
                            relationId: "relation-uuid-789"
                            isMe: false
        "401":
          description: Unauthorized - User does not have access to this team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                no_access:
                  summary: No access to team
                  value:
                    status: error
                    message: "you do not have access to this team"
                    errorType: "AuthorizationError"
                    statusCode: 401
                unauthorized:
                  summary: Authentication required
                  value:
                    status: error
                    message: "Authentication required"
                    errorType: "AuthenticationError"
                    statusCode: 401
        "404":
          description: Team not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                invalid_team_id:
                  summary: Invalid team ID
                  value:
                    status: error
                    message: "teamId Invalid"
                    errorType: "NotFoundError"
                    statusCode: 404
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ChangeRoleRequest:
      type: object
      required:
        - role
      properties:
        role:
          type: string
          enum: [MEMBER, LEADER]
          example: "LEADER"
          description: The new role for the user. Cannot be OWNER.

    CreateTeamRequest:
      type: object
      required:
        - teamData
      properties:
        teamData:
          type: object
          required:
            - teamName
          properties:
            teamName:
              type: string
              minLength: 1
              maxLength: 100
              example: "Development Team"
              description: The name of the team
            teamLogo:
              type: string
              format: uri
              example: "https://example.com/logo.png"
              description: URL to the team logo image
            theme:
              type: string
              example: "blue"
              description: Theme color for the team
        members:
          type: array
          items:
            type: string
          example: ["user1", "user2", "user3"]
          description: Array of user IDs to add as initial team members

    Team:
      type: object
      properties:
        id:
          type: string
          example: "team123"
          description: Unique identifier for the team
        teamName:
          type: string
          example: "Development Team"
          description: The name of the team
        teamLogo:
          type: string
          format: uri
          example: "https://example.com/logo.png"
          description: URL to the team logo image
        theme:
          type: string
          example: "blue"
          description: Theme color for the team
        joinCode:
          type: string
          example: "ABC123XYZ"
          description: Unique code for joining the team
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: Timestamp when the team was created
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: Timestamp when the team was last updated

    UserInTeam:
      type: object
      properties:
        id:
          type: string
          example: "relation123"
          description: Unique identifier for the user-team relationship
        userId:
          type: string
          example: "user123"
          description: ID of the user
        teamId:
          type: string
          example: "team123"
          description: ID of the team
        role:
          type: string
          enum: [LEADER, MEMBER]
          example: "MEMBER"
          description: Role of the user in the team
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: Timestamp when the user joined the team
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: Timestamp when the relationship was last updated

    Error:
      type: object
      properties:
        status:
          type: string
          example: error
          description: Status of the response
        message:
          type: string
          example: "An error occurred"
          description: Human-readable error message
        errorType:
          type: string
          example: "ValidationError"
          description: Type of error that occurred
        statusCode:
          type: integer
          example: 400
          description: HTTP status code

    TeamDetails:
      type: object
      properties:
        teamName:
          type: string
          example: "Development Team"
          description: The name of the team
        teamLogo:
          type: string
          format: uri
          example: "https://example.com/logo.png"
          description: URL to the team logo image
        theme:
          type: string
          example: "blue"
          description: Theme color for the team
        teamMembers:
          type: array
          items:
            $ref: "#/components/schemas/TeamMember"
          description: List of all team members with their details

    TeamMember:
      type: object
      properties:
        id:
          type: string
          example: "user-uuid-123"
          description: Unique identifier of the user
        username:
          type: string
          example: "john_doe"
          description: Username of the team member
        email:
          type: string
          format: email
          example: "john@example.com"
          description: Email address of the team member
        photo:
          type: string
          format: uri
          example: "https://example.com/photos/john.jpg"
          description: URL to the user's profile photo
        teamRole:
          type: string
          enum: [OWNER, LEADER, MEMBER]
          example: "MEMBER"
          description: Role of the user in this team
        joinAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: Timestamp when the user joined the team
        relationId:
          type: string
          example: "relation-uuid-456"
          description: Unique identifier for the user-team relationship
        isMe:
          type: boolean
          example: true
          description: Indicates if this member is the authenticated user
