/api/login:
  post:
    summary: User login authentication
    description: Authenticates a user with email and password credentials and returns a JWT token
    tags:
      - Authentication
    security: [] # This endpoint doesn't require authentication
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
                description: User's email address
                example: "mohdghosam@gmail.com"
              password:
                type: string
                format: password
                description: User's password
                example: "bomb5699"
    responses:
      "200":
        description: Login successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Login successful"
                token:
                  type: string
                  description: JWT authentication token
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                user:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "user123"
                    email:
                      type: string
                      example: "mohdghosam@gmail.com"
      "400":
        description: Bad request - Invalid input
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Email and password are required"
      "401":
        description: Unauthorized - Invalid credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Invalid email or password"
      "500":
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Internal server error"

/api/signup:
  post:
    summary: Sign the user up
    description: This endpoint allows a user to sign up by providing their email, password, and username.
    tags:
      - Authentication
    security: [] # This endpoint doesn't require authentication
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - username
              - email
              - password
            properties:
              username:
                type: string
                example: "john_doe"
              email:
                type: string
                format: email
                example: "mohd@example.com"
              password:
                type: string
                minLength: 6
                example: "password123"
    responses:
      "201":
        description: User successfully created
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "success"
                token:
                  type: string
                  description: JWT authentication token
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                data:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1234567890abcdef"
                        email:
                          type: string
                          example: "test@example.com"
                        username:
                          type: string
                          example: "john_doe"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2023-10-01T12:00:00Z"
      "400":
        description: Bad request - invalid input
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid input data"
      "409":
        description: User already exists
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "User already exists"
